content_assist_completion_replacement_background=200,200,0
content_assist_completion_replacement_foreground=200,0,0
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="java.util.List"><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.Stack"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayDeque"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.Stack"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayDeque"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.RandomAccess"><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.util.Stack"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.ArrayDeque"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.AbstractList"><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.AbstractCollection"><rhs name\="java.util.Stack"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.ArrayDeque"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.ArrayList"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Vector"><rhs name\="java.util.Stack"/></lhs><lhs name\="java.util.Stack"><rhs name\="java.util.Stack"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.AbstractMap"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.HashMap"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.TreeSet"/><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.AbstractSet"><rhs name\="java.util.TreeSet"/><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.HashSet"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.Queue"><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayDeque"/></lhs><lhs name\="C$pair"><rhs name\="C$pair"/></lhs><lhs name\="java.util.NavigableSet"><rhs name\="java.util.TreeSet"/></lhs><lhs name\="java.util.SortedSet"><rhs name\="java.util.TreeSet"/></lhs><lhs name\="java.util.TreeSet"><rhs name\="java.util.TreeSet"/></lhs><lhs name\="java.util.AbstractQueue"><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.util.PriorityQueue"><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.util.Deque"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayDeque"/></lhs><lhs name\="kruskalsAlgorithm$pair"><rhs name\="kruskalsAlgorithm$pair"/></lhs><lhs name\="java.util.ArrayDeque"><rhs name\="java.util.ArrayDeque"/></lhs><lhs name\="A$pair"><rhs name\="A$pair"/></lhs><lhs name\="B$dsu"><rhs name\="B$dsu"/></lhs></history>
content_assist_number_of_computers=12
content_assist_parameters_background=52,57,61
content_assist_parameters_foreground=238,238,238
content_assist_proposals_background=52,57,61
content_assist_proposals_foreground=238,238,238
eclipse.preferences.version=1
java_bracket=249,250,244
java_comment_task_tag=154,140,124
java_default=217,232,247
java_doc_default=128,128,128
java_doc_keyword=154,140,124
java_doc_link=169,156,140
java_doc_tag=30,120,155
java_keyword=204,108,29
java_keyword_bold=false
java_keyword_return=204,108,29
java_keyword_return_bold=false
java_multi_line_comment=128,128,128
java_operator=230,230,250
java_single_line_comment=128,128,128
java_string=23,198,163
matchingBracketsColor=249,250,244
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.quickassist.lightbulb=true
org.eclipse.jdt.ui.formatterprofiles.version=21
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="java" deleted\="false" description\="imports" enabled\="true" name\="import">import java.io.BufferedReader;&\#13;\r\nimport java.io.IOException;&\#13;\r\nimport java.io.InputStreamReader;&\#13;\r\nimport java.util.ArrayList;&\#13;\r\nimport java.util.Arrays;&\#13;\r\nimport java.util.Random;&\#13;\r\nimport java.util.StringTokenizer;</template><template autoinsert\="true" context\="java" deleted\="false" description\="Boiler Plate" enabled\="true" name\="hello">//jai Shree Krishna&\#13;\r\nimport java.io.BufferedReader;&\#13;\r\nimport java.io.IOException;&\#13;\r\nimport java.util.Collections;&\#13;\r\nimport java.io.InputStreamReader;&\#13;\r\nimport java.util.ArrayList;&\#13;\r\nimport java.util.Arrays;&\#13;\r\nimport java.util.Random;&\#13;\r\nimport java.util.StringTokenizer;&\#13;\r\npublic class ${word_selection}${}{&\#13;\r\n// author\: Tarun Verma&\#13;\r\nstatic FastScanner sc \= new FastScanner();&\#13;\r\nstatic int inf \= Integer.MAX_VALUE;&\#13;\r\nstatic long mod \= 1000000007;&\#13;\r\n&\#13;\r\n/* Common Mistakes By Me&\#13;\r\n * make sure to read the bottom part of question&\#13;\r\n * special cases (n\=1?)&\#13;\r\n * In Game Theory Check your solution and consider all the solutions&\#13;\r\n * Always initialise value to the declare array in local scope&\#13;\r\n * don't use debugs in interactive problems&\#13;\r\n * Always Reset vis,adj array upto n+1 otherwise can cause TLE&\#13;\r\n*/&\#13;\r\npublic static void solve() {&\#13;\r\n\t${cursor}&\#13;\r\n}&\#13;\r\n&\#13;\r\npublic static void main(String[] args) {&\#13;\r\n\tint t \= 1;&\#13;\r\n\tt \= sc.nextInt();&\#13;\r\n\touter\: for (int tt \= 0; tt &lt; t; tt++) {&\#13;\r\n\t\tsolve();&\#13;\r\n\t}&\#13;\r\n}&\#13;\r\n&\#13;\r\n////////////////////////////////////////////////////////////////////////////////////&\#13;\r\n////////////////////DO NOT BELOW BEFORE THIS LINE //////////////////////////////////&\#13;\r\n////////////////////////////////////////////////////////////////////////////////////&\#13;\r\n&\#13;\r\nstatic boolean isPalindrom(char[] arr, int i, int j) {&\#13;\r\n\tboolean ok \= true;&\#13;\r\n\twhile (i &lt;\= j) {&\#13;\r\n\t\tif (arr[i] \!\= arr[j]) {&\#13;\r\n\t\t\tok \= false;&\#13;\r\n\t\t\tbreak;&\#13;\r\n\t\t}&\#13;\r\n\t\ti++;&\#13;\r\n\t\tj--;&\#13;\r\n\t}&\#13;\r\n\treturn ok;&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic int max(int a, int b) {&\#13;\r\n\treturn Math.max(a, b);&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic int min(int a, int b) {&\#13;\r\n\treturn Math.min(a, b);&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic long max(long a, long b) {&\#13;\r\n\treturn Math.max(a, b);&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic long min(long a, long b) {&\#13;\r\n\treturn Math.min(a, b);&\#13;\r\n}&\#13;\r\nstatic void sort(int arr[]) {&\#13;\r\n\tArrayList&lt;Integer&gt; a \= new ArrayList&lt;Integer&gt;();&\#13;\r\n\tfor(int i\: arr) a.add(i);&\#13;\r\n\tCollections.sort(a);&\#13;\r\n\tfor(int i\=0;i&lt;arr.length;i++) arr[i] \= a.get(i);&\#13;\r\n}&\#13;\r\nstatic void sort(long arr[]) {&\#13;\r\n\tArrayList&lt;Long&gt; a \= new ArrayList&lt;Long&gt;();&\#13;\r\n\tfor(long i\: arr) a.add(i);&\#13;\r\n\tCollections.sort(a);&\#13;\r\n\tfor(int i\=0;i&lt;arr.length;i++) arr[i] \= a.get(i);&\#13;\r\n}&\#13;\r\nstatic int abs(int a) {&\#13;\r\n\treturn Math.abs(a);&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic long abs(long a) {&\#13;\r\n\treturn Math.abs(a);&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic void swap(long arr[], int i, int j) {&\#13;\r\n\tlong temp \= arr[i];&\#13;\r\n\tarr[i] \= arr[j];&\#13;\r\n\tarr[j] \= temp;&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic void swap(int arr[], int i, int j) {&\#13;\r\n\tint temp \= arr[i];&\#13;\r\n\tarr[i] \= arr[j];&\#13;\r\n\tarr[j] \= temp;&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic int maxArr(int arr[]) {&\#13;\r\n\tint maxi \= Integer.MIN_VALUE;&\#13;\r\n\tfor (int x \: arr)&\#13;\r\n\t\tmaxi \= max(maxi, x);&\#13;\r\n\treturn maxi;&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic int minArr(int arr[]) {&\#13;\r\n\tint mini \= Integer.MAX_VALUE;&\#13;\r\n\tfor (int x \: arr)&\#13;\r\n\t\tmini \= min(mini, x);&\#13;\r\n\treturn mini;&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic long maxArr(long arr[]) {&\#13;\r\n\tlong maxi \= Long.MIN_VALUE;&\#13;\r\n\tfor (long x \: arr)&\#13;\r\n\t\tmaxi \= max(maxi, x);&\#13;\r\n\treturn maxi;&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic long minArr(long arr[]) {&\#13;\r\n\tlong mini \= Long.MAX_VALUE;&\#13;\r\n\tfor (long x \: arr)&\#13;\r\n\t\tmini \= min(mini, x);&\#13;\r\n\treturn mini;&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic int gcd(int a, int b) {&\#13;\r\n\tif (b \=\= 0)&\#13;\r\n\t\treturn a;&\#13;\r\n\treturn gcd(b, a % b);&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic long gcd(long a, long b) {&\#13;\r\n\tif (b \=\= 0)&\#13;\r\n\t\treturn a;&\#13;\r\n\treturn gcd(b, a % b);&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic void ruffleSort(int[] a) {&\#13;\r\n\tint n \= a.length;&\#13;\r\n\tRandom r \= new Random();&\#13;\r\n\tfor (int i \= 0; i &lt; a.length; i++) {&\#13;\r\n\t\tint oi \= r.nextInt(n);&\#13;\r\n\t\tint temp \= a[i];&\#13;\r\n\t\ta[i] \= a[oi];&\#13;\r\n\t\ta[oi] \= temp;&\#13;\r\n\t}&\#13;\r\n\tArrays.sort(a);&\#13;\r\n}&\#13;\r\n&\#13;\r\npublic static int binarySearch(int a[], int target) {&\#13;\r\n\tint left \= 0;&\#13;\r\n\tint right \= a.length - 1;&\#13;\r\n\tint mid \= (left + right) / 2;&\#13;\r\n\tint i \= 0;&\#13;\r\n\twhile (left &lt;\= right) {&\#13;\r\n\t\tif (a[mid] &lt;\= target) {&\#13;\r\n\t\t\ti \= mid + 1;&\#13;\r\n\t\t\tleft \= mid + 1;&\#13;\r\n\t\t} else {&\#13;\r\n\t\t\tright \= mid - 1;&\#13;\r\n\t\t}&\#13;\r\n\t\tmid \= (left + right) / 2;&\#13;\r\n\t}&\#13;\r\n\treturn i;&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic class FastScanner {&\#13;\r\n\tBufferedReader br \= new BufferedReader(new InputStreamReader(System.in));&\#13;\r\n\tStringTokenizer st \= new StringTokenizer("");&\#13;\r\n&\#13;\r\n\tString next() {&\#13;\r\n\t\twhile (\!st.hasMoreTokens())&\#13;\r\n\t\t\ttry {&\#13;\r\n\t\t\t\tst \= new StringTokenizer(br.readLine());&\#13;\r\n\t\t\t} catch (IOException e) {&\#13;\r\n\t\t\t\te.printStackTrace();&\#13;\r\n\t\t\t}&\#13;\r\n\t\treturn st.nextToken();&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\tint nextInt() {&\#13;\r\n\t\treturn Integer.parseInt(next());&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\tint[] readArray(int n) {&\#13;\r\n\t\tint[] a \= new int[n];&\#13;\r\n\t\tfor (int i \= 0; i &lt; n; i++)&\#13;\r\n\t\t\ta[i] \= nextInt();&\#13;\r\n\t\treturn a;&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\tlong[] readLongArray(int n) {&\#13;\r\n\t\tlong[] a \= new long[n];&\#13;\r\n\t\tfor (int i \= 0; i &lt; n; i++)&\#13;\r\n\t\t\ta[i] \= nextLong();&\#13;\r\n\t\treturn a;&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\tint[][] read2dArray(int n, int m) {&\#13;\r\n\t\tint arr[][] \= new int[n][m];&\#13;\r\n\t\tfor (int i \= 0; i &lt; n; i++) {&\#13;\r\n\t\t\tfor (int j \= 0; j &lt; m; j++) {&\#13;\r\n\t\t\t\tarr[i][j] \= nextInt();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}&\#13;\r\n\t\treturn arr;&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\tArrayList&lt;Integer&gt; readArrayList(int n) {&\#13;\r\n\t\tArrayList&lt;Integer&gt; arr \= new ArrayList&lt;Integer&gt;();&\#13;\r\n\t\tfor (int i \= 0; i &lt; n; i++) {&\#13;\r\n\t\t\tint a \= nextInt();&\#13;\r\n\t\t\tarr.add(a);&\#13;\r\n\t\t}&\#13;\r\n\t\treturn arr;&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\tlong nextLong() {&\#13;\r\n\t\treturn Long.parseLong(next());&\#13;\r\n\t}&\#13;\r\n}&\#13;\r\n&\#13;\r\nstatic class pair {&\#13;\r\n\tint fr, sc;&\#13;\r\n&\#13;\r\n\tpair(int fr, int sc) {&\#13;\r\n\t\tthis.fr \= fr;&\#13;\r\n\t\tthis.sc \= sc;&\#13;\r\n\t}&\#13;\r\n}&\#13;\r\n&\#13;\r\n////////////////////////////////////////////////////////////////////////////////////\t&\#13;\r\n&\#13;\r\n}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Sieve of Eractothenes" enabled\="true" name\="Sieve">public static ArrayList&lt;Integer&gt; Sieve(int n){&\#13;\r\n\tboolean [] mark \= new boolean[n+1];&\#13;\r\n\tfor(int i \=0;i&lt;\=n;i++) {&\#13;\r\n\t\tmark[i] \= true;&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\tfor(int p \= 2;p*p &lt;\= n;p++) {&\#13;\r\n\t\tif(mark[p] \=\= true) {&\#13;\r\n\t\t\tfor(int i \= p*p;i&lt;\=n;i+\=p) {&\#13;\r\n\t\t\t\tmark[i] \= false;&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\tArrayList&lt;Integer&gt; arr \= new ArrayList&lt;&gt;();&\#13;\r\n&\#13;\r\n//\tFollowing numbers are Prime numbers less then n&\#13;\r\n\tfor(int i \=2;i&lt;\=n;i++) {&\#13;\r\n\t\tif(mark[i] \=\= true) {&\#13;\r\n\t\t\tarr.add(i);&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\treturn arr;&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="a To power b" enabled\="true" name\="power">static long mul( long x, long y)&\#13;\r\n{&\#13;\r\n    return (x % mod * y % mod) % mod;&\#13;\r\n}&\#13;\r\n &\#13;\r\n &\#13;\r\nstatic long power( long a,  long b) {&\#13;\r\n    a %\= mod;&\#13;\r\n    long res \= 1;&\#13;\r\n    while (b &gt; 0) {&\#13;\r\n        if ((b &amp; 1) \=\= 1)&\#13;\r\n            res \= mul(res,a);&\#13;\r\n        a \= mul(a,a);&\#13;\r\n        b &gt;&gt;\= 1;&\#13;\r\n    }&\#13;\r\n    return res%mod;&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="dfs" enabled\="true" name\="dfs">static void dfs(int node, int [] a, long b[]) {&\#13;\r\n\tvis[node] \= 1;&\#13;\r\n\tint index \= a[(int) b[node]];&\#13;\r\n\tif(vis[index] \=\= 1) return;&\#13;\r\n\tdfs(index, a, b);&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Modulus Functions" enabled\="true" name\="mod">\tstatic int N \= (int)2e5 + 5; // initialize array Length&\#13;\r\n\tstatic int mod\= 998244353; // modulus&\#13;\r\n\tstatic long fact[],inv[];&\#13;\r\n&\#13;\r\n\tstatic void pre()&\#13;\r\n\t{&\#13;\r\n\t\tfact \= new long[N];&\#13;\r\n\t\tinv \= new long[N];&\#13;\r\n\t    fact[0]\=1;&\#13;\r\n\t    inv[0]\=1;&\#13;\r\n\t    for(int i\=1;i&lt;N;i++)&\#13;\r\n\t    fact[i]\=(i*fact[i-1])%mod;&\#13;\r\n\t    for(int i\=1;i&lt;N;i++)&\#13;\r\n\t    inv[i]\=mod_pow(fact[i], mod-2, mod);&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\tstatic long mod_mul(long x, long y,int p)&\#13;\r\n\t{&\#13;\r\n\t    x %\= p;&\#13;\r\n\t    y %\= p;&\#13;\r\n\t    return (x * 1l * y) % p;&\#13;\r\n\t}&\#13;\r\n\t &\#13;\r\n\tstatic long mod_add(long x,long y,int p)&\#13;\r\n\t{&\#13;\r\n\t    x %\= p;&\#13;\r\n\t    y %\= p;&\#13;\r\n\t    x +\= y;&\#13;\r\n\t    while(x &gt;\= p) x -\= p;&\#13;\r\n\t    while(x &lt; 0) x +\= p;&\#13;\r\n\t    return x;&\#13;\r\n\t}&\#13;\r\n\tstatic long mod_pow(long a,long b,long p) {&\#13;\r\n\t    a %\= p;&\#13;\r\n\t    long res \= 1;&\#13;\r\n\t    while (b &gt; 0) {&\#13;\r\n\t        if ((b &amp; 1) \=\= 1)&\#13;\r\n\t            res \= (res*a)%p;&\#13;\r\n\t        a \=(a*a)%p;&\#13;\r\n\t        b &gt;&gt;\= 1;&\#13;\r\n\t    }&\#13;\r\n\t    return res % p;&\#13;\r\n\t}&\#13;\r\n\tstatic long nCr(long  n, long  r, long  p) &\#13;\r\n\t{ &\#13;\r\n\t    if(r&gt;n)&\#13;\r\n\t    return 0;&\#13;\r\n\t    if(n\=\=r)&\#13;\r\n\t    return 1;&\#13;\r\n\t    if (r\=\=0) &\#13;\r\n\t    return 1; &\#13;\r\n\t    return (((fact[(int) n]*inv[(int) r]) % p )*inv[(int) (n-r)])%p;&\#13;\r\n\t} </template><template autoinsert\="true" context\="java" deleted\="false" description\="dsu" enabled\="true" name\="dsu">\tstatic class dsu{&\#13;\r\n\t\t \tint parent[],size[]; &\#13;\r\n\t\t    public int getPar(int i) {&\#13;\r\n\t\t        if(parent[i] \!\= parent[parent[i]]) {&\#13;\r\n\t\t            parent[i] \= getPar(parent[i]);&\#13;\r\n\t\t        }&\#13;\r\n\t\t        return parent[i];&\#13;\r\n\t\t    }&\#13;\r\n\t\t    &\#13;\r\n\t\t    public void union(int u,int v) {&\#13;\r\n\t\t        int parent_u \= getPar(u);&\#13;\r\n\t\t        int parent_v \= getPar(v);&\#13;\r\n\t\t        if(parent_u \=\= parent_v) {&\#13;\r\n\t\t            return;&\#13;\r\n\t\t        }&\#13;\r\n\t\t        if(size[parent_u] &gt;\= size[parent_v]) {&\#13;\r\n//\t\t            swap&\#13;\r\n\t\t            int tmp \= parent_u;&\#13;\r\n\t\t            parent_u \= parent_v;&\#13;\r\n\t\t            parent_v \= tmp;&\#13;\r\n\t\t        }&\#13;\r\n\t\t        size[parent_v] +\= size[parent_u];&\#13;\r\n\t\t        parent[parent_u] \= parent_v;&\#13;\r\n\t\t        return;&\#13;\r\n\t\t    }&\#13;\r\n\t\t    &\#13;\r\n\t\t    dsu(int n) {&\#13;\r\n\t\t    \tparent \= new int[n];&\#13;\r\n\t\t    \tsize \= new int[n];&\#13;\r\n\t\t        for (int i \= 0; i &lt; n; i++) {&\#13;\r\n\t\t            parent[i] \= i;&\#13;\r\n\t\t            size[i] \= 1;&\#13;\r\n\t\t        }&\#13;\r\n\t\t    }&\#13;\r\n\t}</template></templates>
overriddenByCSS=,content_assist_completion_replacement_background,content_assist_completion_replacement_foreground,content_assist_parameters_background,content_assist_parameters_foreground,content_assist_proposals_background,content_assist_proposals_foreground,java_bracket,java_comment_task_tag,java_default,java_doc_default,java_doc_keyword,java_doc_link,java_doc_tag,java_keyword,java_keyword_bold,java_keyword_return,java_keyword_return_bold,java_multi_line_comment,java_operator,java_single_line_comment,java_string,matchingBracketsColor,pf_coloring_argument,pf_coloring_assignment,pf_coloring_comment,pf_coloring_key,pf_coloring_value,semanticHighlighting.abstractClass.color,semanticHighlighting.abstractClass.enabled,semanticHighlighting.abstractMethodInvocation.color,semanticHighlighting.abstractMethodInvocation.enabled,semanticHighlighting.annotation.color,semanticHighlighting.annotation.enabled,semanticHighlighting.annotation.italic,semanticHighlighting.annotationElementReference.color,semanticHighlighting.annotationElementReference.enabled,semanticHighlighting.class.color,semanticHighlighting.class.enabled,semanticHighlighting.deprecatedMember.color,semanticHighlighting.deprecatedMember.enabled,semanticHighlighting.deprecatedMember.underline,semanticHighlighting.deprecatedMember.strikethrough,semanticHighlighting.enum.color,semanticHighlighting.enum.enabled,semanticHighlighting.enum.italic,semanticHighlighting.field.color,semanticHighlighting.field.enabled,semanticHighlighting.inheritedField.color,semanticHighlighting.inheritedMethodInvocation.color,semanticHighlighting.inheritedMethodInvocation.enabled,semanticHighlighting.interface.color,semanticHighlighting.interface.enabled,semanticHighlighting.localVariable.color,semanticHighlighting.localVariable.enabled,semanticHighlighting.localVariableDeclaration.color,semanticHighlighting.localVariableDeclaration.enabled,semanticHighlighting.localVariableDeclaration.bold,semanticHighlighting.method.color,semanticHighlighting.method.enabled,semanticHighlighting.methodDeclarationName.color,semanticHighlighting.methodDeclarationName.enabled,semanticHighlighting.methodDeclarationName.bold,semanticHighlighting.number.color,semanticHighlighting.number.enabled,semanticHighlighting.parameterVariable.color,semanticHighlighting.parameterVariable.enabled,semanticHighlighting.staticField.color,semanticHighlighting.staticField.enabled,semanticHighlighting.staticFinalField.color,semanticHighlighting.staticFinalField.enabled,semanticHighlighting.staticMethodInvocation.color,semanticHighlighting.staticMethodInvocation.enabled,semanticHighlighting.typeArgument.color,semanticHighlighting.typeArgument.enabled,semanticHighlighting.typeParameter.color,semanticHighlighting.typeParameter.enabled,semanticHighlighting.typeParameter.bold,semanticHighlighting.restrictedKeywords.color,semanticHighlighting.restrictedKeywords.bold,
pf_coloring_argument=221,40,103
pf_coloring_assignment=217,232,247
pf_coloring_comment=128,128,128
pf_coloring_key=217,232,247
pf_coloring_value=23,198,163
semanticHighlighting.abstractClass.color=62,171,230
semanticHighlighting.abstractClass.enabled=true
semanticHighlighting.abstractMethodInvocation.color=128,246,167
semanticHighlighting.abstractMethodInvocation.enabled=true
semanticHighlighting.annotation.color=160,160,160
semanticHighlighting.annotation.enabled=true
semanticHighlighting.annotation.italic=true
semanticHighlighting.annotationElementReference.color=235,75,100
semanticHighlighting.annotationElementReference.enabled=true
semanticHighlighting.class.color=18,144,195
semanticHighlighting.class.enabled=true
semanticHighlighting.deprecatedMember.color=128,128,128
semanticHighlighting.deprecatedMember.enabled=true
semanticHighlighting.deprecatedMember.strikethrough=true
semanticHighlighting.deprecatedMember.underline=false
semanticHighlighting.enum.color=204,129,186
semanticHighlighting.enum.enabled=true
semanticHighlighting.enum.italic=true
semanticHighlighting.field.color=102,225,248
semanticHighlighting.field.enabled=true
semanticHighlighting.inheritedField.color=143,143,191
semanticHighlighting.inheritedMethodInvocation.color=205,246,104
semanticHighlighting.inheritedMethodInvocation.enabled=true
semanticHighlighting.interface.color=128,242,246
semanticHighlighting.interface.enabled=true
semanticHighlighting.localVariable.color=243,236,121
semanticHighlighting.localVariable.enabled=true
semanticHighlighting.localVariableDeclaration.bold=false
semanticHighlighting.localVariableDeclaration.color=242,242,0
semanticHighlighting.localVariableDeclaration.enabled=true
semanticHighlighting.method.color=167,236,33
semanticHighlighting.method.enabled=true
semanticHighlighting.methodDeclarationName.bold=false
semanticHighlighting.methodDeclarationName.color=30,181,64
semanticHighlighting.methodDeclarationName.enabled=true
semanticHighlighting.number.color=104,151,187
semanticHighlighting.number.enabled=true
semanticHighlighting.parameterVariable.color=121,171,255
semanticHighlighting.parameterVariable.enabled=true
semanticHighlighting.restrictedKeywords.bold=false
semanticHighlighting.restrictedKeywords.color=204,108,29
semanticHighlighting.staticField.color=141,218,248
semanticHighlighting.staticField.enabled=true
semanticHighlighting.staticFinalField.color=141,218,248
semanticHighlighting.staticFinalField.enabled=true
semanticHighlighting.staticMethodInvocation.color=150,236,63
semanticHighlighting.staticMethodInvocation.enabled=true
semanticHighlighting.typeArgument.color=177,102,218
semanticHighlighting.typeArgument.enabled=true
semanticHighlighting.typeParameter.bold=false
semanticHighlighting.typeParameter.color=191,164,164
semanticHighlighting.typeParameter.enabled=true
sourceHoverBackgroundColor=47,47,47
spelling_locale_initialized=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
